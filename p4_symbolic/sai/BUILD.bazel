# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("//p4_pdpi/testing:diff_test.bzl", "cmd_diff_test", "diff_test")
load("//p4_pdpi:pdgen.bzl", "p4_pd_proto")
load("@com_github_p4lang_p4c//:bazel/p4_library.bzl", "p4_library")

package(
    default_visibility = ["//visibility:public"],
    licenses = ["notice"],
)

cc_library(
    name = "sai",
    srcs = ["sai.cc"],
    hdrs = ["sai.h"],
    deps = [
        ":parser",
        "//p4_pdpi:ir",
        "//p4_pdpi:ir_cc_proto",
        "//p4_symbolic:parser",
        "//p4_symbolic/symbolic",
        "//sai_p4/instantiations/google:sai_nonstandard_platforms_cc",
        "//sai_p4/instantiations/google:switch_role",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_test(
    name = "sai_test",
    srcs = ["sai_test.cc"],
    deps = [
        ":sai",
        "//gutil:status_matchers",
        "//p4_symbolic/symbolic",
        "//sai_p4/instantiations/google:switch_role",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "fields",
    srcs = ["fields.cc"],
    hdrs = ["fields.h"],
    deps = [
        "//gutil:status",
        "//p4_symbolic/symbolic",
        "@com_github_z3prover_z3//:api",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "fields_test",
    srcs = ["fields_test.cc"],
    deps = [
        ":fields",
        ":sai",
        "//gutil:status_matchers",
        "//p4_symbolic/symbolic",
        "//sai_p4/instantiations/google:switch_role",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "parser",
    srcs = ["parser.cc"],
    hdrs = ["parser.h"],
    visibility = ["//p4_symbolic:__subpackages__"],
    deps = [
        ":fields",
        "//gutil:status",
        "//p4_symbolic/symbolic",
        "@com_github_z3prover_z3//:api",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "deparser",
    srcs = ["deparser.cc"],
    hdrs = ["deparser.h"],
    deps = [
        ":fields",
        "//gutil:status",
        "//p4_pdpi/string_encodings:bit_string",
        "//p4_pdpi/string_encodings:hex_string",
        "//p4_symbolic/symbolic",
        "@com_github_z3prover_z3//:api",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "deparser_test",
    srcs = ["deparser_test.cc"],
    deps = [
        ":deparser",
        ":fields",
        ":parser",
        ":sai",
        "//gutil:status_matchers",
        "//p4_pdpi/packetlib",
        "//p4_pdpi/packetlib:packetlib_cc_proto",
        "//p4_pdpi/string_encodings:bit_string",
        "//p4_symbolic/symbolic",
        "//sai_p4/instantiations/google:switch_role",
        "@com_github_google_glog//:glog",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_github_z3prover_z3//:api",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest_main",
    ],
)

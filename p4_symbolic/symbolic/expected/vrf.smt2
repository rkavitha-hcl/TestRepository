; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let ((?x153 (ite (and $x84 $x95) 0 (ite (and $x84 $x101) 3 (ite (and $x84 $x107) 2 (- 1))))))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x67 (ite ipv4.$valid$ (ite $x82 (ite $x108 1 ?x153) (- 1)) (- 1))))
 (let (($x66 (ite ipv4.$valid$ (ite $x82 $x84 false) false)))
 (let (($x122 (and $x84 (and (and (and (not $x90) (not $x95)) (not $x101)) (not $x107)))))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 (and (and (not $x90) (not $x95)) (not $x101))) $x107)))
 (let (($x115 (and (and $x84 (and (not $x90) (not $x95))) $x101)))
 (let ((?x144 (ite $x115 ?x130 (ite $x119 ?x130 (ite $x122 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x111 (and (and $x84 (not $x90)) $x95)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) ?x144))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (and (and (not $x49) $x66) (= ?x67 (- 1))))))))))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let ((?x153 (ite (and $x84 $x95) 0 (ite (and $x84 $x101) 3 (ite (and $x84 $x107) 2 (- 1))))))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x67 (ite ipv4.$valid$ (ite $x82 (ite $x108 1 ?x153) (- 1)) (- 1))))
 (let (($x66 (ite ipv4.$valid$ (ite $x82 $x84 false) false)))
 (let (($x122 (and $x84 (and (and (and (not $x90) (not $x95)) (not $x101)) (not $x107)))))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 (and (and (not $x90) (not $x95)) (not $x101))) $x107)))
 (let (($x115 (and (and $x84 (and (not $x90) (not $x95))) $x101)))
 (let ((?x144 (ite $x115 ?x130 (ite $x119 ?x130 (ite $x122 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x111 (and (and $x84 (not $x90)) $x95)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) ?x144))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (let (($x341 (and (not $x49) $x66)))
 (and $x341 (= ?x67 0))))))))))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let ((?x153 (ite (and $x84 $x95) 0 (ite (and $x84 $x101) 3 (ite (and $x84 $x107) 2 (- 1))))))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x67 (ite ipv4.$valid$ (ite $x82 (ite $x108 1 ?x153) (- 1)) (- 1))))
 (let (($x66 (ite ipv4.$valid$ (ite $x82 $x84 false) false)))
 (let (($x122 (and $x84 (and (and (and (not $x90) (not $x95)) (not $x101)) (not $x107)))))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 (and (and (not $x90) (not $x95)) (not $x101))) $x107)))
 (let (($x115 (and (and $x84 (and (not $x90) (not $x95))) $x101)))
 (let ((?x144 (ite $x115 ?x130 (ite $x119 ?x130 (ite $x122 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x111 (and (and $x84 (not $x90)) $x95)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) ?x144))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (and (and (not $x49) $x66) (= ?x67 1)))))))))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let ((?x153 (ite (and $x84 $x95) 0 (ite (and $x84 $x101) 3 (ite (and $x84 $x107) 2 (- 1))))))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x67 (ite ipv4.$valid$ (ite $x82 (ite $x108 1 ?x153) (- 1)) (- 1))))
 (let (($x66 (ite ipv4.$valid$ (ite $x82 $x84 false) false)))
 (let (($x122 (and $x84 (and (and (and (not $x90) (not $x95)) (not $x101)) (not $x107)))))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 (and (and (not $x90) (not $x95)) (not $x101))) $x107)))
 (let (($x115 (and (and $x84 (and (not $x90) (not $x95))) $x101)))
 (let ((?x144 (ite $x115 ?x130 (ite $x119 ?x130 (ite $x122 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x111 (and (and $x84 (not $x90)) $x95)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) ?x144))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (and (and (not $x49) $x66) (= ?x67 2)))))))))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let ((?x153 (ite (and $x84 $x95) 0 (ite (and $x84 $x101) 3 (ite (and $x84 $x107) 2 (- 1))))))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x67 (ite ipv4.$valid$ (ite $x82 (ite $x108 1 ?x153) (- 1)) (- 1))))
 (let (($x66 (ite ipv4.$valid$ (ite $x82 $x84 false) false)))
 (let (($x122 (and $x84 (and (and (and (not $x90) (not $x95)) (not $x101)) (not $x107)))))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 (and (and (not $x90) (not $x95)) (not $x101))) $x107)))
 (let (($x115 (and (and $x84 (and (not $x90) (not $x95))) $x101)))
 (let ((?x144 (ite $x115 ?x130 (ite $x119 ?x130 (ite $x122 (_ bv511 9) standard_metadata.egress_spec)))))
 (let (($x111 (and (and $x84 (not $x90)) $x95)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) ?x144))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (and (and (not $x49) $x66) (= ?x67 3)))))))))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x83 (ite ipv4.$valid$ (ite $x62 0 (ite (and $x50 $x61) 1 (- 1))) (- 1))))
 (let (($x68 (ite ipv4.$valid$ $x50 false)))
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let ((?x80 (ite $x62 ?x79 (ite (and (and $x50 (not $x56)) $x61) ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let (($x65 (and (and $x50 (not $x56)) $x61)))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (and (and (not $x49) $x68) (= ?x83 (- 1)))))))))))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x83 (ite ipv4.$valid$ (ite $x62 0 (ite (and $x50 $x61) 1 (- 1))) (- 1))))
 (let (($x68 (ite ipv4.$valid$ $x50 false)))
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let ((?x80 (ite $x62 ?x79 (ite (and (and $x50 (not $x56)) $x61) ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let (($x65 (and (and $x50 (not $x56)) $x61)))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (and (and (not $x49) $x68) (= ?x83 0))))))))))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x83 (ite ipv4.$valid$ (ite $x62 0 (ite (and $x50 $x61) 1 (- 1))) (- 1))))
 (let (($x68 (ite ipv4.$valid$ $x50 false)))
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let ((?x80 (ite $x62 ?x79 (ite (and (and $x50 (not $x56)) $x61) ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let (($x65 (and (and $x50 (not $x56)) $x61)))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (and (and (not $x49) $x68) (= ?x83 1))))))))))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun scalars.userMetadata.vrf () (_ BitVec 10))
(declare-fun ipv4.srcAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun scalars.userMetadata.vrf_is_valid () (_ BitVec 1))
(assert
 (let (($x175 (= standard_metadata.ingress_port (_ bv1 9))))
 (and (and (distinct standard_metadata.ingress_port (_ bv511 9)) true) (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x175))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (or $x49 (or (or false (= ?x164 (_ bv0 9))) (= ?x164 (_ bv1 9))))))))))))))))))))))))))))))))))
(assert
 (let ((?x73 (concat (_ bv0 9) (_ bv0 1))))
 (let (($x61 (and true (= (bvand ipv4.srcAddr (_ bv555813129 32)) (_ bv555810816 32)))))
 (let (($x50 (and true ipv4.$valid$)))
 (let (($x65 (and (and $x50 (not (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32))))) $x61)))
 (let ((?x79 (concat (_ bv0 9) (_ bv1 1))))
 (let (($x56 (and true (= (bvand ipv4.srcAddr (_ bv153159945 32)) (_ bv2162944 32)))))
 (let (($x62 (and $x50 $x56)))
 (let ((?x80 (ite $x62 ?x79 (ite $x65 ?x73 scalars.userMetadata.vrf))))
 (let (($x89 (= ?x80 ?x73)))
 (let (($x107 (and (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32)))) $x89)))
 (let (($x101 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32)))) (= ?x80 ?x79))))
 (let (($x95 (and (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32)))) $x89)))
 (let (($x90 (and (and true (= ipv4.dstAddr (_ bv168427520 32))) $x89)))
 (let (($x109 (not $x90)))
 (let (($x113 (and $x109 (not $x95))))
 (let (($x117 (and $x113 (not $x101))))
 (let ((?x75 (ite true (_ bv1 1) (_ bv0 1))))
 (let ((?x76 (ite $x65 ?x75 (ite true (ite false (_ bv1 1) (_ bv0 1)) scalars.userMetadata.vrf_is_valid))))
 (let ((?x81 (ite $x62 ?x75 ?x76)))
 (let (($x82 (bvuge ?x81 (_ bv1 1))))
 (let (($x84 (and $x50 $x82)))
 (let ((?x124 (ite (and $x84 (and $x117 (not $x107))) (_ bv511 9) standard_metadata.egress_spec)))
 (let ((?x130 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x119 (and (and $x84 $x117) $x107)))
 (let (($x115 (and (and $x84 $x113) $x101)))
 (let (($x111 (and (and $x84 $x109) $x95)))
 (let (($x108 (and $x84 $x90)))
 (let ((?x164 (ite $x108 ?x130 (ite $x111 (concat (_ bv0 8) (_ bv0 1)) (ite $x115 ?x130 (ite $x119 ?x130 ?x124))))))
 (let (($x49 (= ?x164 (_ bv511 9))))
 (and (and (not $x49) true) (= (- 1) (- 1)))))))))))))))))))))))))))))))))
(check-sat)


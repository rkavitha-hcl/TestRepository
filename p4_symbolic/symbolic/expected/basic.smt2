; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x138 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x138)))
(assert
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x74 (and $x70 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let (($x75 (and $x43 $x74)))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (or (or (= ?x125 (_ bv455 9)) (= ?x125 (_ bv0 9))) (= ?x125 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let ((?x101 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x43 $x60) 2 (- 1)))))
 (let ((?x113 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x101)))
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x132 (ite ipv4.$valid$ (ite $x61 1 ?x113) (- 1))))
 (let (($x131 (ite ipv4.$valid$ $x43 false)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x75 (and $x43 (and $x70 (not $x60)))))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (let (($x42 (= ?x125 (_ bv455 9))))
 (and (and (not $x42) $x131) (= ?x132 (- 1))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x138 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x138)))
(assert
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x74 (and $x70 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let (($x75 (and $x43 $x74)))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (or (or (= ?x125 (_ bv455 9)) (= ?x125 (_ bv0 9))) (= ?x125 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let ((?x101 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x43 $x60) 2 (- 1)))))
 (let ((?x113 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x101)))
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x132 (ite ipv4.$valid$ (ite $x61 1 ?x113) (- 1))))
 (let (($x131 (ite ipv4.$valid$ $x43 false)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x75 (and $x43 (and $x70 (not $x60)))))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (let (($x42 (= ?x125 (_ bv455 9))))
 (let (($x245 (and (not $x42) $x131)))
 (and $x245 (= ?x132 0))))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x138 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x138)))
(assert
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x74 (and $x70 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let (($x75 (and $x43 $x74)))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (or (or (= ?x125 (_ bv455 9)) (= ?x125 (_ bv0 9))) (= ?x125 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let ((?x101 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x43 $x60) 2 (- 1)))))
 (let ((?x113 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x101)))
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x132 (ite ipv4.$valid$ (ite $x61 1 ?x113) (- 1))))
 (let (($x131 (ite ipv4.$valid$ $x43 false)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x75 (and $x43 (and $x70 (not $x60)))))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (let (($x42 (= ?x125 (_ bv455 9))))
 (and (and (not $x42) $x131) (= ?x132 1)))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x138 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x138)))
(assert
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x74 (and $x70 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let (($x75 (and $x43 $x74)))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (or (or (= ?x125 (_ bv455 9)) (= ?x125 (_ bv0 9))) (= ?x125 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let ((?x101 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x43 $x60) 2 (- 1)))))
 (let ((?x113 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x101)))
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x132 (ite ipv4.$valid$ (ite $x61 1 ?x113) (- 1))))
 (let (($x131 (ite ipv4.$valid$ $x43 false)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x75 (and $x43 (and $x70 (not $x60)))))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (let (($x42 (= ?x125 (_ bv455 9))))
 (and (and (not $x42) $x131) (= ?x132 2)))))))))))))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x138 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x138)))
(assert
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x74 (and $x70 (not (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let (($x75 (and $x43 $x74)))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (or (or (= ?x125 (_ bv455 9)) (= ?x125 (_ bv0 9))) (= ?x125 (_ bv1 9))))))))))))))))))))))
(assert
 (let (($x60 (and true (= ((_ extract 31 24) ipv4.dstAddr) ((_ extract 31 24) (_ bv167772160 32))))))
 (let (($x43 (and (not false) ipv4.$valid$)))
 (let ((?x101 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))) 3 (ite (and $x43 $x60) 2 (- 1)))))
 (let ((?x113 (ite (and $x43 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))) 0 ?x101)))
 (let (($x46 (= ipv4.dstAddr (_ bv168427520 32))))
 (let (($x47 (and true $x46)))
 (let (($x61 (and $x43 $x47)))
 (let ((?x132 (ite ipv4.$valid$ (ite $x61 1 ?x113) (- 1))))
 (let (($x131 (ite ipv4.$valid$ $x43 false)))
 (let (($x62 (not $x47)))
 (let (($x66 (and $x62 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))))
 (let (($x70 (and $x66 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x75 (and $x43 (and $x70 (not $x60)))))
 (let ((?x89 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x72 (and (and $x43 $x70) $x60)))
 (let (($x55 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x68 (and (and $x43 $x66) $x55)))
 (let ((?x103 (ite $x68 ?x89 (ite $x72 ?x89 (ite $x75 (_ bv455 9) standard_metadata.egress_spec)))))
 (let (($x51 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x64 (and (and $x43 $x62) $x51)))
 (let ((?x125 (ite $x61 ?x89 (ite $x64 (concat (_ bv0 8) (_ bv0 1)) ?x103))))
 (let (($x42 (= ?x125 (_ bv455 9))))
 (and (and (not $x42) $x131) (= ?x132 3)))))))))))))))))))))))))
(check-sat)


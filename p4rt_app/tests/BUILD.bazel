load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("//p4_pdpi/testing:diff_test.bzl", "cmd_diff_test", "diff_test")
load("//p4_pdpi:pdgen.bzl", "p4_pd_proto")
load("@com_github_p4lang_p4c//:bazel/p4_library.bzl", "p4_library")

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
package(
    default_visibility = ["//visibility:public"],
    licenses = ["notice"],
)

cc_test(
    name = "acl_table_test",
    srcs = ["acl_table_test.cc"],
    tags = ["exclusive"],
    deps = [
        "//gutil:proto",
        "//gutil:status_matchers",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4rt_app/tests/lib:app_db_entry_builder",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "arbitration_test",
    srcs = ["arbitration_test.cc"],
    tags = ["exclusive"],
    deps = [
        "//gutil:status",
        "//gutil:status_matchers",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "@com_github_google_glog//:glog",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_grpc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "action_set_test",
    srcs = ["action_set_test.cc"],
    tags = ["exclusive"],
    deps = [
        "//gutil:proto",
        "//gutil:proto_matchers",
        "//gutil:status_matchers",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4rt_app/tests/lib:app_db_entry_builder",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "fixed_l3_tables_test",
    srcs = ["fixed_l3_tables_test.cc"],
    tags = ["exclusive"],
    deps = [
        "//gutil:proto",
        "//gutil:proto_matchers",
        "//gutil:status_matchers",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4rt_app/tests/lib:app_db_entry_builder",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "forwarding_pipeline_config_test",
    srcs = ["forwarding_pipeline_config_test.cc"],
    tags = ["exclusive"],
    deps = [
        "//gutil:status_matchers",
        "//p4_pdpi:entity_management",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "response_path_test",
    srcs = ["response_path_test.cc"],
    tags = ["exclusive"],
    deps = [
        "//gutil:proto",
        "//gutil:status_matchers",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4rt_app/tests/lib:app_db_entry_builder",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_binary(
    name = "p4rt_route_measurement_test",
    testonly = True,
    srcs = ["p4rt_route_measurement_test.cc"],
    deps = [
        "//gutil:proto",
        "//gutil:proto_matchers",
        "//gutil:status_matchers",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4_pdpi/netaddr:ipv4_address",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_binary(
    name = "send_arbitration_req",
    srcs = ["send_arbitration_req.cc"],
    deps = [
        "//gutil:status",
        "//p4_pdpi/utils:ir",
        "//p4rt_app/p4runtime:p4runtime_impl",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "@com_github_google_glog//:glog",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_grpc",
        "@com_google_absl//absl/time",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "packetio_test",
    srcs = ["packetio_test.cc"],
    tags = ["exclusive"],
    deps = [
        "//gutil:proto",
        "//gutil:proto_matchers",
        "//gutil:status_matchers",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4_pdpi:pd",
        "//p4_pdpi/string_encodings:hex_string",
        "//p4rt_app/sonic:fake_packetio_interface",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "//sai_p4/instantiations/google:sai_pd_cc_proto",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "hashing_test",
    srcs = ["hashing_test.cc"],
    tags = ["exclusive"],
    deps = [
        "//gutil:status_matchers",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4rt_app/sonic:hashing",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
    ],
)

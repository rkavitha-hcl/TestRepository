
package(
    default_visibility = ["//visibility:public"],
    licenses = ["notice"],
)

cc_library(
    name = "test_data",
    testonly = True,
    srcs = ["test_data.cc"],
    hdrs = ["test_data.h"],
    deps = [
        "//gutil:testing",
        "//sai_p4/instantiations/google:sai_pd_cc_proto",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_library(
    name = "p4_blackbox_fixture",
    testonly = True,
    hdrs = ["p4_blackbox_fixture.h"],
    deps = [
        "//gutil:status_matchers",
        "//lib/gnmi:gnmi_helper",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4_pdpi:pd",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "//sai_p4/instantiations/google:sai_pd_cc_proto",
        "//thinkit:mirror_testbed",
        "//thinkit:mirror_testbed_fixture",
        "@com_google_googletest//:gtest",
    ],
)

cc_library(
    name = "smoke_test",
    testonly = True,
    srcs = ["smoke_test.cc"],
    hdrs = ["smoke_test.h"],
    deps = [
        ":p4_blackbox_fixture",
        ":test_data",
        "//gutil:proto_matchers",
        "//gutil:status_matchers",
        "//gutil:testing",
        "//p4_pdpi:entity_management",
        "//p4_pdpi:pd",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "//sai_p4/instantiations/google:sai_pd_cc_proto",
        "//thinkit:mirror_testbed_fixture",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest",
        "@com_google_protobuf//:protobuf",
    ],
    alwayslink = True,
)

cc_library(
    name = "master_arbitration_test",
    testonly = True,
    srcs = ["master_arbitration_test.cc"],
    hdrs = ["master_arbitration_test.h"],
    deps = [
        ":p4_blackbox_fixture",
        "//gutil:status_matchers",
        "//gutil:testing",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//sai_p4/fixed:p4_roles",
        "//thinkit:test_environment",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_grpc",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/numeric:int128",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/time",
        "@com_google_googleapis//google/rpc:code_cc_proto",
        "@com_google_googletest//:gtest",
    ],
    alwayslink = True,
)

cc_library(
    name = "util",
    srcs = ["util.cc"],
    hdrs = ["util.h"],
    deps = [
        "//p4_pdpi:connection_management",
        "//p4_pdpi:ir_cc_proto",
        "//p4_pdpi:pd",
        "//p4_pdpi/string_encodings:decimal_string",
        "//p4_pdpi/string_encodings:hex_string",
        "//sai_p4/instantiations/google:sai_pd_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/time",
    ],
)

proto_library(
    name = "test_vector_proto",
    srcs = [
        "test_vector.proto",
    ],
    deps = [
        "//p4_pdpi/packetlib:packetlib_proto",
        "//sai_p4/instantiations/google:sai_pd_proto",
    ],
)

cc_proto_library(
    name = "test_vector_cc_proto",
    deps = [":test_vector_proto"],
)

cc_library(
    name = "test_vector",
    testonly = True,
    srcs = ["test_vector.cc"],
    hdrs = ["test_vector.h"],
    deps = [
        ":test_vector_cc_proto",
        "//p4_pdpi/packetlib:packetlib_cc_proto",
        "//sai_p4/instantiations/google:sai_pd_cc_proto",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_googletest//:gtest",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "hashing_test",
    testonly = True,
    srcs = ["hashing_test.cc"],
    hdrs = ["hashing_test.h"],
    deps = [
        ":test_vector",
        ":util",
        "//gutil:proto_matchers",
        "//gutil:status_matchers",
        "//gutil:testing",
        "//lib/gnmi:gnmi_helper",
        "//p4_pdpi:connection_management",
        "//p4_pdpi:entity_management",
        "//p4_pdpi:pd",
        "//p4_pdpi/netaddr:ipv4_address",
        "//p4_pdpi/netaddr:mac_address",
        "//p4_pdpi/packetlib",
        "//p4_pdpi/string_encodings:decimal_string",
        "//p4rt_app/tests/lib:p4runtime_grpc_service",
        "//sai_p4/instantiations/google:sai_p4info_cc",
        "//sai_p4/instantiations/google:sai_pd_cc_proto",
        "//thinkit:mirror_testbed_fixture",
        "@boost//:bimap",
        "@boost//:graph",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_grpc",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/algorithm",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/random",
        "@com_google_absl//absl/random:distributions",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@com_google_googletest//:gtest",
    ],
    alwayslink = True,
)
